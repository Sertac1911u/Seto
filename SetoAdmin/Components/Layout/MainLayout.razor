@using SetoAdmin.Services
@inherits LayoutComponentBase
@inject AuthenticationService AuthService
@inject NavigationManager NavigationManager

<div class="admin-layout">
    <aside class="sidebar">
        <div class="sidebar-header">
            <h1 class="brand">Admin Panel</h1>
        </div>
        <nav class="nav-menu">
            @if (isAuthenticated)
            {
                <ul>
                    <li>
                        <NavLink href="/home" Match="NavLinkMatch.All">
                            <i class="fas fa-home"></i>
                            <span>Home</span>
                        </NavLink>
                    </li>
                    <li>
                        <NavLink href="/user-management">
                            <i class="fas fa-users"></i>
                            <span>User Management</span>
                        </NavLink>
                    </li>
                    <li>
                        <NavLink href="/analytics">
                            <i class="fas fa-chart-bar"></i>
                            <span>Analytics</span>
                        </NavLink>
                    </li>
                    <li>
                        <NavLink href="/blogs">
                            <i class="fas fa-blog"></i>
                            <span>Blogs</span>
                        </NavLink>
                    </li>
                    <li>
                        <NavLink href="/videos">
                            <i class="fas fa-video"></i>
                            <span>Videos</span>
                        </NavLink>
                    </li>
                    <li>
                        <NavLink href="/games">
                            <i class="fas fa-gamepad"></i>
                            <span>Games</span>
                        </NavLink>
                    </li>
                    <li>
                        <NavLink href="/resume">
                            <i class="fas fa-file-alt"></i>
                            <span>Resume</span>
                        </NavLink>
                    </li>
                    <li>
                        <NavLink href="/settings">
                            <i class="fas fa-cog"></i>
                            <span>Settings</span>
                        </NavLink>
                    </li>
                    <li>
                        <NavLink href="/users">
                            <i class="fas fa-user"></i>
                            <span>Users</span>
                        </NavLink>
                    </li>
                    <li class="gosite-item">
                        <NavLink href="/siteadi">
                            <i class="fa-solid fa-arrow-up-right-from-square"></i>
                            <span>Go Site</span>
                        </NavLink>
                    </li>
                    <li class="logout-item">
                        <button class="nav-link" @onclick="HandleLogout">
                            <i class="fas fa-sign-out-alt"></i>
                            <span>Logout</span>
                        </button>
                    </li>
                </ul>
            }
            else
            {
                <ul>
                    <li class="login-item">
                        <NavLink href="/login">
                            <i class="fas fa-sign-in-alt"></i>
                            <span>Login</span>
                        </NavLink>
                    </li>
                </ul>
            }
        </nav>
    </aside>
    <main class="main-content">
        <div class="content-wrapper">
            @Body
        </div>
    </main>
</div>

@code {
    private bool isAuthenticated;
    private bool firstRender = true;

    private async Task HandleLogout()
    {
        await AuthService.Logout();
        isAuthenticated = false;
        NavigationManager.NavigateTo("/login");
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            isAuthenticated = await AuthService.InitializeAuthentication();
            StateHasChanged();
        }
    }
}